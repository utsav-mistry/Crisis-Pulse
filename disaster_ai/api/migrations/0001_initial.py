# Generated by Django 5.2.5 on 2025-08-19 23:00

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ExternalDataSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('source_type', models.CharField(choices=[('weather', 'Weather API'), ('satellite', 'Satellite Data'), ('seismic', 'Seismic Data'), ('social_media', 'Social Media'), ('news', 'News API')], max_length=20)),
                ('api_endpoint', models.URLField()),
                ('api_key', models.CharField(blank=True, max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('last_fetch', models.DateTimeField(blank=True, null=True)),
                ('fetch_interval', models.IntegerField(default=3600)),
                ('configuration', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('model_type', models.CharField(choices=[('prediction', 'Prediction Model'), ('classification', 'Classification Model'), ('regression', 'Regression Model')], max_length=20)),
                ('version', models.CharField(max_length=20)),
                ('parameters', models.JSONField()),
                ('features', models.JSONField()),
                ('target_variable', models.CharField(max_length=50)),
                ('training_data_range', models.JSONField()),
                ('accuracy_metrics', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='DisasterPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('flood', 'Flood'), ('drought', 'Drought'), ('earthquake', 'Earthquake'), ('cyclone', 'Cyclone'), ('landslide', 'Landslide'), ('tsunami', 'Tsunami'), ('wildfire', 'Wildfire')], max_length=20)),
                ('location', models.JSONField()),
                ('predicted_date', models.DateField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('confidence', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High')], max_length=10)),
                ('probability', models.FloatField()),
                ('model_used', models.CharField(choices=[('lstm', 'LSTM'), ('cnn', 'CNN'), ('random_forest', 'Random Forest'), ('xgboost', 'XGBoost'), ('ensemble', 'Ensemble')], max_length=20)),
                ('model_version', models.CharField(default='1.0', max_length=20)),
                ('input_features', models.JSONField()),
                ('prediction_metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
            ],
            options={
                'ordering': ['-predicted_date'],
                'indexes': [models.Index(fields=['type', 'location'], name='api_disaste_type_3857c9_idx'), models.Index(fields=['predicted_date', 'is_active'], name='api_disaste_predict_eb403a_idx')],
            },
        ),
        migrations.CreateModel(
            name='HistoricalDisaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('flood', 'Flood'), ('drought', 'Drought'), ('earthquake', 'Earthquake'), ('cyclone', 'Cyclone'), ('landslide', 'Landslide'), ('tsunami', 'Tsunami'), ('wildfire', 'Wildfire')], max_length=20)),
                ('subtype', models.CharField(blank=True, max_length=50)),
                ('state', models.CharField(max_length=50)),
                ('district', models.CharField(max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('date', models.DateField()),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('casualties', models.IntegerField(default=0)),
                ('damage_estimate', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('coordinates', models.JSONField(blank=True, null=True)),
                ('source', models.CharField(default='manual', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['type', 'state', 'date'], name='api_histori_type_7ef073_idx'), models.Index(fields=['state', 'district'], name='api_histori_state_4eaf41_idx')],
            },
        ),
        migrations.CreateModel(
            name='PredictionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request_type', models.CharField(max_length=50)),
                ('input_data', models.JSONField()),
                ('output_data', models.JSONField(blank=True, null=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed')], default='pending', max_length=20)),
                ('error_message', models.TextField(blank=True)),
                ('processing_time', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='WeatherData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location', models.JSONField()),
                ('date', models.DateField()),
                ('temperature_max', models.FloatField()),
                ('temperature_min', models.FloatField()),
                ('humidity', models.FloatField()),
                ('rainfall', models.FloatField()),
                ('wind_speed', models.FloatField()),
                ('pressure', models.FloatField()),
                ('source', models.CharField(default='IMD', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'indexes': [models.Index(fields=['location', 'date'], name='api_weather_locatio_869fca_idx')],
                'unique_together': {('location', 'date')},
            },
        ),
    ]
